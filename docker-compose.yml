version: '3.8'

services: 
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports: 
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    restart: always 

  kafka1: 
    image: confluentinc/cp-server:7.5.0
    hostname: kafka1
    container_name: kafka1
    depends_on: 
      - zookeeper
    ports: 
      - "9092:9092" 
      - "9071:9071" 
    environment: 
      KAFKA_BROKER_ID: 1 
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9071, PLAINTEXT://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT, PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SUPER_USERS: User:admin
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_PLAINTEXT_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_PLAINTEXT_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret"; 

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1 
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 1 
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1 

      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9071
      CONFLUENT_METRICS_ENABLE: 'true'
    volumes: 
      - ./client.properties:/tmp/client.properties
    restart: always 

  connect: 
#    image: confluentinc/cp-server-connect:7.6.0
    container_name: connect
    restart: always 
    build:
      context: .
      dockerfile: Dockerfile
    depends_on: 
      - zookeeper
      - kafka1
    volumes: 
      - ./Schemas/ipInfo_Schema.avsc:/tmp/Schemas/ipInfo_Schema.avsc
      - ./Schemas/bankInfo_Schema.avsc:/tmp/Schemas/bankInfo_Schema.avsc
      - ./source_connector.json:/tmp/source_connector.json
      - ./bank_connector.json:/tmp/bank_connector.json
      - ./client.properties:/tmp/client.properties
    ports: 
      - "8083:8083" 
    environment:
      CUB_CLASSPATH: '/usr/share/java/confluent-security/connect/*:/usr/share/java/kafka/*:/usr/share/java/cp-base-new/*'

      CONNECT_BOOTSTRAP_SERVERS: kafka1:9071
      CONNECT_LISTENERS: "http://0.0.0.0:8083" 
      CONNECT_GROUP_ID: "connect-cluster-group" 
      
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status

      CONNECT_REPLICATION_FACTOR: 1 
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1 
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1 
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1 

      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
#      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
#      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'

      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: "org.reflections=ERROR"

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: schemaregistry
    restart: always
    depends_on: 
      - zookeeper
      - kafka1
    volumes: 
      - ./client.properties:/tmp/client.properties
    ports: 
      - "8081:8081"
    environment: 
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9071
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'INFO' 

